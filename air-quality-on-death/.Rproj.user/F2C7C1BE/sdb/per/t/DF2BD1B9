{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Notebook\"\noutput: html_notebook\n---\n\n```{r}\nlibrary(needs)\nneeds(ggplot2,\n      lubridate,\n      dplyr,\n      gridExtra,\n      corrplot,\n      caret,\n      Metrics,\n      Boruta,\n      caretEnsemble,\n      doMC)\n\nregisterDoMC(cores = detectCores() - 1)\n```\n\n\n## Load and clean data\n\n```{r}\ntraining <- read.csv(\"../input/train.csv\")\ntesting <- read.csv(\"../input/test.csv\")\n```\n\n```{r}\nstr(training)\n```\n\n```{r}\ntraining$date <- ymd(training$date)\ntesting$date <- ymd(testing$date)\n```\n\n```{r}\nsummary(training)\n```\n\nIt looks like there are some missing data in the features: O3, PM10, PM25, NO2\nLet's explore the missing data. The number of rows with full info is:\n\n```{r}\nfull_rows <- sum(complete.cases(training))\nfull_rows\n```\n\nThats is only about 64% of the dataset:\n```{r}\nfull_rows/nrow(training)\n```\n\nIt's probable we need to apply some imputing techniques here. We'll see it later.\nMost of the missing values are located in two features:\n\n```{r}\napply(training[, c(\"O3\", \"PM10\", \"PM25\", \"NO2\")], 2, function(x) sum(is.na(x)))\n```\n\n\nThere aren't duplicated rows\n```{r}\nanyDuplicated(training)\n```\n\n## Exploratory Data analysis\n\nWe are going to explore each variable:\n\n### Univariable analysis:\n\n#### Date\n\nThis is a temporal serie:\n```{r}\nrange(training$date)\n```\n\nLet's see the number of cases per year and if the missing date is located in \nsome particular years:\n\n```{r}\ntraining %>% group_by(year=year(date)) %>% \n    summarise(tatal=n(), sum(is.na(O3)), sum(is.na(PM10)), \n    sum(is.na(PM25)), sum(is.na(NO2)), sum(is.na(T2M)))\n```\n\nIt looks like that PM25 started to be measured since 2008 and NO2 since 2009\n\n\n\n#### mortality_rate\n\nThis is the outcome variable we need to predict:\n```{r}\nrange(training$mortality_rate)\n```\n\n```{r}\ngld1 <- ggplot(training, aes(x=mortality_rate)) + geom_density()\ngld2 <- ggplot(training, aes(x=1, y=mortality_rate)) + geom_boxplot()\ngrid.arrange(gld1, gld2, ncol=2)\n```\n\n\n\nIt has a a little right skew\n\n#### O3\n\n```{r}\ngld1 <- ggplot(training, aes(x=O3)) + geom_density()\ngld2 <- ggplot(training, aes(x=1, y=O3)) + geom_boxplot()\ngrid.arrange(gld1, gld2, ncol=2)\n```\n\n#### PM10\n\n```{r}\ngld1 <- ggplot(training, aes(x=PM10)) + geom_density()\ngld2 <- ggplot(training, aes(x=1, y=PM10)) + geom_boxplot()\ngrid.arrange(gld1, gld2, ncol=2)\n```\n#### PM25\n\n```{r}\ngld1 <- ggplot(training, aes(x=PM25)) + geom_density()\ngld2 <- ggplot(training, aes(x=1, y=PM25)) + geom_boxplot()\ngrid.arrange(gld1, gld2, ncol=2)\n```\n#### T2M\n\n```{r}\ngld1 <- ggplot(training, aes(x=T2M)) + geom_density()\ngld2 <- ggplot(training, aes(x=1, y=T2M)) + geom_boxplot()\ngrid.arrange(gld1, gld2, ncol=2)\n```\n\n#### region\n\n```{r}\nlevels(training$region)\n```\n\nThe cases per region are quite similar in general:\n```{r}\ntable(training$region)\n```\n\n### Multivariable analysis\n\nLet's see now the relation between variables. It is posible some of the variables \nchange with date:\n\n```{r}\nggplot(training, aes(x=date, y=O3)) + geom_point()\n```\n\nWe can see O3 has some seasonality.\n\n\n```{r}\nggplot(training, aes(x=date, y=PM10)) + geom_point(alpha=0.3)\n```\n\nsomething similar (but it looks like that with less seasonality) happen with PM10\n\n\n\n```{r}\nggplot(training, aes(x=date, y=PM25)) + geom_point(alpha=0.3)\n```\n\n\n```{r}\nggplot(training, aes(x=date, y=NO2)) + geom_point(alpha=0.3)\n```\n\n\n```{r}\nggplot(training, aes(x=date, y=T2M)) + geom_point(alpha=0.3)\n```\n\nLet's see the evolution of the mortality along the time:\n\n```{r}\nggplot(training, aes(x=date, y=mortality_rate)) + geom_point(alpha=0.3)\n\n```\n\nIt looks like there is a great seasonality in the mortality rate. It is greater in \nWinter and lower in Summer\n\nLet's see if some region has more mortality than others:\n\n```{r}\nggplot(training, aes(x=region, y=mortality_rate, fill=region)) + geom_boxplot()\n```\n\nOne of the regions (12000007) has the lowest mortality rate. \nLet's check if we have info about all regions all the years;\n\n```{r}\ntable(year(training$date), training$region)\n```\n\nThere aren't complete info for some of the regions in 2012: \nE12000006, E12000007, E12000008, E12000009\n\nLet's see the correlation between numeric variables (only complete cases):\n\n```{r}\ntraining_numeric <- training[,setdiff(names(training), c('Id', 'region', 'date'))]\n```\n\n```{r}\ncor_vars <- cor(training_numeric[complete.cases(training_numeric),])\ncorrplot(cor_vars)\n```\n\nPM10 and MP25 are highly positivily correlated.\nO3 and NO2 are highly negatively correlated.\nThe variable T2M is the one which is more correlated with mortality_rate \n(negative correlation)\n\n\n## Model\n\nWe are going to create a first quick model as baseline. \nWe are going to use only training data since 2009 which hasn't missing values:\n\n```{r}\ntraining$month <- month(training$date)\ntesting$month <- month(testing$date)\n```\n\n```{r}\nset.seed(1234)\n\ntraining_complete <- training %>% filter(year(date) >= 2009) \n\ndindex <- createDataPartition(training_complete$mortality_rate, p=0.7, list=FALSE)\ntrain_data <- training_complete[dindex,]\ntest_data <- training_complete[-dindex,]\n```\n\n```{r}\nfitControl <- trainControl(method = \"cv\",\n                           number = 5)\n```\n\n\n```{r}\nmodel_rf <- train(mortality_rate~O3+PM10+PM25+NO2+T2M,\n                      train_data,\n                      method=\"ranger\",\n                      metric=\"RMSE\",\n                      tuneGrid=expand.grid(.mtry=2),\n                      trControl=fitControl)\n```\n\n```{r}\npred_rf <- predict(model_rf, newdata = test_data)\nrmse(test_data$mortality_rate, pred_rf)\n\n```\n\n\n```{r}\nxgb_grid_1 = expand.grid(\n  nrounds = 1000,\n  eta = c(0.01, 0.001, 0.0001),\n  max_depth = c(2, 4, 6, 8, 10),\n  gamma = 1,\n  colsample_bytree = 1,\n  min_child_weight = 1\n\n)\n\nfit_xgboost <- train(mortality_rate~O3+PM10+PM25+NO2+T2M,\n                      train_data,\n                      method = \"xgbTree\", \n                      metric = \"RMSE\",\n                      tuneGrid = xgb_grid_1,\n\t\t\t          trControl = fitControl\n)\n\n\n```\n\n```{r}\nfit_xgboost_pred <- predict(fit_xgboost, test_data)\nrmse(test_data$mortality_rate, fit_xgboost_pred)\n```\n\n\n\n```{r}\ntraining$month <- month(training$date)\ntesting$month <- month(testing$date)\n\n```\n\n\n```{r}\nboruta_results <- Boruta(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region, train_data)\nboruta_results\nplot(boruta_results)\n```\n\n```{r}\nmodel_rf2 <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month,\n                      train_data,\n                      method=\"ranger\",\n                      metric=\"RMSE\",\n                      tuneGrid=expand.grid(.mtry=2),\n                      trControl=fitControl)\n```\n\n```{r}\npred_rf2 <- predict(model_rf2, newdata = test_data)\nrmse(test_data$mortality_rate, pred_rf2)\n```\n\n```{r}\npred_rf2 <- predict(model_rf2, newdata = test_data)\nrmse(test_data$mortality_rate, pred_rf2)\n```\n\n```{r}\nmodel_xgboost2 <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month,\n                      train_data,\n                      method = \"xgbTree\", \n                      metric = \"RMSE\",\n                      tuneGrid = xgb_grid_1,\n\t\t\t          trControl = fitControl\n)\n\n\n```\n\n```{r}\nfit_xgboost_pred2 <- predict(model_xgboost2, test_data)\nrmse(test_data$mortality_rate, fit_xgboost_pred2)\n```\n\n\n```{r}\nmodel_rf3 <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n                      train_data,\n                      method=\"ranger\",\n                      metric=\"RMSE\",\n                      tuneGrid=expand.grid(.mtry=2),\n                      trControl=fitControl)\n```\n\n```{r}\npred_rf3 <- predict(model_rf3, newdata = test_data)\nrmse(test_data$mortality_rate, pred_rf3)\n```\n\n\n\n```{r}\n# Generate predictions\nresults <- predict(model_rf3, newdata = testing)\n\n# Assemble results\ndf <- data.frame(Id = testing$Id,\n                 mortality_rate = results)\n\n# Write submission\nwrite.csv(df, \"../output/submission_3.csv\", row.names = FALSE)\n```\n\n```{r}\nmodel_knn <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n                      train_data,\n                      method=\"knn\",\n                      metric=\"RMSE\",\n                      tuneLength=10,\n                      trControl=fitControl)\n```\n\n```{r}\npred_knn <- predict(model_knn, newdata = test_data)\nrmse(test_data$mortality_rate, pred_knn)\n```\n\n```{r}\nmodel_knn <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n                      train_data,\n                      method=\"knn\",\n                      metric=\"RMSE\",\n                      preProc=c(\"center\", \"scale\"),\n                      tuneLength=10,\n                      trControl=fitControl)\n```\n\n```{r}\npred_knn <- predict(model_knn, newdata = test_data)\nrmse(test_data$mortality_rate, pred_knn)\n```\n\n```{r}\n#nn_grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(1, 2, 3, 4, 5))\nmodel_nnet <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n                      train_data,\n                      method=\"nnet\",\n                      metric=\"RMSE\",\n                      preProc=c(\"center\", \"scale\"),\n                      tuneLength=10,\n                      #tuneGrid = nn_grid, \n                      trace = FALSE,\n                      trControl=fitControl)\n```\n\n```{r}\npred_nnet <- predict(model_nnet, newdata = test_data)\nrmse(test_data$mortality_rate, pred_nnet)\n```\n\n```{r}\nmodel_glmnet <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n                      train_data,\n                      method=\"glmnet\",\n                      metric=\"RMSE\",\n                      preProc=c(\"center\", \"scale\"),\n                      tuneLength=10,\n                      trControl=fitControl)\n```\n\n```{r}\npred_glmnet <- predict(model_glmnet, newdata = test_data)\nrmse(test_data$mortality_rate, pred_glmnet)\n```\n\n\n\n```{r}\nmodel_glm <- train(mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n                      train_data,\n                      method=\"glm\",\n                      metric=\"RMSE\",\n                      preProc=c(\"center\", \"scale\"),\n                      tuneLength=10,\n                      trControl=fitControl)\n```\n\n```{r}\npred_glm <- predict(model_glm, newdata = test_data)\nrmse(test_data$mortality_rate, pred_glm)\n```\n\n```{r}\nsummary(model_glm$finalModel)\n```\n\n\n```{r}\nmodel_list <- list(RF=model_rf3, XGBOOST=model_xgboost2, KNN=model_knn, NNET=model_nnet, GMLNET=model_glmnet)\nresamples <- resamples(model_list)\n```\n\n```{r}\nmodel_cor <- modelCor(resamples)\ncorrplot(model_cor)\n```\n\n```{r}\nbwplot(resamples, metric=\"RMSE\")\n```\n\n### Ensamble model\n\n```{r}\nnn_grid <- expand.grid(.decay = c(0.5, 0.1), .size = c(1, 2, 3, 4, 5))\nmodel_list_big <- caretList(\n  mortality_rate~O3+PM10+PM25+NO2+T2M+month+region,\n  train_data,\n  trControl=fitControl,\n  metric=\"RMSE\",\n  tuneList=list(\n    FIT_ranger = caretModelSpec(method=\"ranger\"),\n    FIT_xgbTree = caretModelSpec(method=\"xgbTree\", tuneGrid=xgb_grid_1),\n    FIT_glmnet = caretModelSpec(method=\"glmnet\", preProc=c(\"center\", \"scale\")),\n    FIT_svmRadial = caretModelSpec(method=\"svmRadial\"),\n    FIT_knn = caretModelSpec(method=\"knn\", preProc=c(\"center\", \"scale\")),\n    FIT_nnet = caretModelSpec(method = \"nnet\", maxit = 1000, tuneGrid = nn_grid, trace = F, linout = 1, preProc=c(\"center\", \"scale\"))\n  )\n)\n```\n\n```{r}\nstackControl <- trainControl(method=\"repeatedcv\", number=10, repeats=3, savePredictions=TRUE)\nstack_rf <- caretStack(\n              model_list_big, \n              method=\"rf\", \n              metric=\"RMSE\", \n              trControl=stackControl\n            )\n```\n\n```{r}\nstack_rf_pred <- predict(stack_rf, newdata =test_data)\nstack_rf_rmse <- rmse(test_data$mortality_rate, stack_rf_pred)\n```\n\n```{r}\nstack_rf\n```\n\n```{r}\nresamples_mix <- resamples(model_list_big)\ncor_mix <-  modelCor(resamples_mix)\ncor_mix\ncorrplot(cor_mix)\n```\n```{r}\ndotplot(resamples_mix, metric=\"RMSE\")\n```\n\n```{r}\nbwplot(resamples_mix, metric=\"RMSE\")\n```\n\n```{r}\npredict(model_list_big, newdata=head(test_data))\n```\n\n```{r}\npredict(stack_rf, newdata=test_data)\n```\n\n```{r}\nsummary(stack_rf)\n```\n\n",
    "created" : 1490736562314.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "731116090",
    "id" : "DF2BD1B9",
    "lastKnownWriteTime" : 1490762636,
    "last_content_update" : 1490762636234,
    "path" : "~/Dropbox/BIGDATA/Competitions/kaggle/air-quality-on-death/src/Analysis.Rmd",
    "project_path" : "src/Analysis.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}